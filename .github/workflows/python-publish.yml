# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    tags:
      - 'v*'

jobs:
  Release:

    runs-on: windows-latest

    steps:
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
      with:
        # Optionally strip `v` prefix
        strip_v: true
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pyinstaller==4.10
        pip install -r requirements.txt
    - name: Build
      run: |
        pyinstaller --noconfirm --onefile --windowed --icon "assets/icon.ico" --name "RPGMaker MV Decoder - Encoder" --version-file "auto-py-to-exe-files/version.rc"  "gui.py"
    - uses: actions/upload-artifact@v2
      with:
        name: Windows RPGMaker MV Decoder - Encoder
        path: dist/RPGMaker MV Decoder - Encoder.exe

    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{steps.tag.outputs.tag}}
        release_name: Version ${{steps.tag.outputs.tag}}
        overwrite: true
        body: |
          Automatic release Version ${{steps.tag.outputs.tag}}

          See the [history](https://rpgmaker-mv-decoder.readthedocs.io/en/v${{steps.tag.outputs.tag}}/history.html) for more details
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: dist/RPGMaker MV Decoder - Encoder.exe
        asset_name: RPGMaker MV Decoder - Encoder.exe
        asset_content_type: application/zip
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install -r requirements.txt
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
